# Generated by Django 2.0.1 on 2018-02-02 04:58

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('photos', '0002_auto_20180202_0458'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_published', models.DateField()),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=300)),
                ('body', ckeditor.fields.RichTextField()),
                ('video_url', models.FileField(help_text='Add the URL of a video on your YouTube account', upload_to='', verbose_name='Video URL')),
                ('audio_file', models.FileField(upload_to='')),
                ('quote', models.CharField(help_text='1000 characters max', max_length=1000)),
                ('by', models.CharField(help_text='100 characters max', max_length=100)),
                ('link', models.URLField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('background_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='background_image', to='photos.Photo')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photos.Category')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='photos.Photo')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Separate by commas. "Use quotes" for multi-word tags', through='photos.UUIDTaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-date_published',),
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Audio',
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.blogpost',),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Galleries',
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.blogpost',),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.blogpost',),
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.blogpost',),
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.blogpost',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('blog.blogpost',),
        ),
        migrations.AddField(
            model_name='galleryimage',
            name='gallery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Gallery'),
        ),
    ]
